name: Release

on:
  push:
    branches:
      - 'main'

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Clone repository
      uses: actions/checkout@v5
      with:
        fetch-depth: '0'
        token: ${{ secrets.TOKEN_GITHUB_TO_GITHUB_REPOSITORIES_RW }}
    - name: Use Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.14'
    - name: Install dependencies
      run: |
        curl --location --silent --show-error --fail https://astral.sh/uv/install.sh | sh
        export PATH="$HOME/.local/bin:$PATH"
        uv sync --dev
    - name: Run QA
      run: make qa
    - name: Get next version
      id: get_next_version
      uses: thenativeweb/get-next-version@2.7.1
    - name: Create new version
      if: ${{ steps.get_next_version.outputs.hasNextVersion == 'true' }}
      run: |
        sed -i -r "s/(version = \")([0-9]+\.[0-9]+\.[0-9]+)(\")/\1${{ steps.get_next_version.outputs.version }}\3/" pyproject.toml
        git config --global user.email "hello@thenativeweb.io"
        git config --global user.name "${{ github.actor }}"
        git add pyproject.toml
        git commit -m 'chore: Bump version to ${{ steps.get_next_version.outputs.version }}. [skip ci]'
        git push
        git tag ${{ steps.get_next_version.outputs.version }}
        git push origin ${{ steps.get_next_version.outputs.version }}
    - name: Build package
      if: ${{ steps.get_next_version.outputs.hasNextVersion == 'true' }}
      run: |
        uv build
    - name: Publish package
      if: ${{ steps.get_next_version.outputs.hasNextVersion == 'true' }}
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TOKEN_GITHUB_TO_PYPI_RW }}
      run: |
        uv run twine upload dist/*
